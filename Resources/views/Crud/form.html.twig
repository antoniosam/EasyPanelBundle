<?php

namespace {{ formDirNamespace }};

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolver;
use Symfony\Component\Form\Extension\Core\Type\TextType;
use Symfony\Component\Form\Extension\Core\Type\TextareaType;
use Symfony\Component\Form\Extension\Core\Type\HiddenType;
use Symfony\Component\Form\Extension\Core\Type\ChoiceType;
use Symfony\Component\Form\Extension\Core\Type\PasswordType;
use Symfony\Component\Form\Extension\Core\Type\IntegerType;
use Symfony\Component\Form\Extension\Core\Type\FileType;
use Symfony\Component\Form\Extension\Core\Type\DateTimeType;
use Symfony\Component\Form\Extension\Core\Type\DateType;
use Symfony\Component\Form\Extension\Core\Type\TimeType;
use Symfony\Component\Form\Extension\Core\Type\CheckboxType;


class {{ entity }}Type extends AbstractType
{

    /**
     * {@inheritdoc}
     */
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
{%- for columna in infoPropertysEntity -%}
{% if columna['fieldName'] starts with 'id' %}
    ->add('{{ columna['fieldName'] }}')
{% elseif columna['fieldName'] in ['referencia','salt'] %}
    //->add('{{ columna['fieldName'] }}',TextType::class,['label'=>'{{ columna['fieldName']|capitalize }}','required'  => false,'attr'=>['maxlength'=>{{ columna['length'] }}]])
{% elseif columna['type'] == "string" %}
{%  if columna['length'] < 254 %}
{% if columna['fieldName'] in ['thumb','imagen','poster','foto','video','pdf','archivo','metaimage','imagenpreview','metaimagelarge'] %}
        ->add('{{ columna['fieldName'] }}',FileType::class,['label'=>'{{ columna['fieldName']|capitalize }}','data_class' => null,'required'  => false,'attr'=>['maxlength'=>{{ columna['length'] }}]])
{% elseif columna['fieldName'] in ['pass'] %}
    ;
    if($builder->getData() instanceof \{{ entitybundle }} ){
    if($builder->getData()->getId() < 1){
    $builder->add('{{ columna['fieldName'] }}',PasswordType::class,['label'=>'{{ columna['fieldName']|capitalize }}', 'required'  => true,'attr'=>['maxlength'=>{{ columna['length'] }}]]);
    }
    }
    $builder
{% else %}
        ->add('{{ columna['fieldName'] }}',TextType::class,['label'=>'{{ columna['fieldName']|capitalize }}','required'  => false,'attr'=>['maxlength'=>{{ columna['length'] }}]])
{% endif %}
{% else %}
{%  if columna['length'] > 999  %}
{% if columna['fieldName'] in ['metadesc','metakey'] %}
        ->add('{{ columna['fieldName'] }}',TextareaType::class,['label'=>'{{ columna['fieldName']|capitalize }}','required'  => false,'attr'=>['class'=>'','maxlength'=>{{ columna['length'] }}]])
{% else %}
        ->add('{{ columna['fieldName'] }}',TextareaType::class,['label'=>'{{ columna['fieldName']|capitalize }}','required'  => false,'attr'=>['class'=>'initsummernote','maxlength'=>{{ columna['length'] }}]])
{% endif %}
{% else %}
        ->add('{{ columna['fieldName'] }}',TextareaType::class,['label'=>'{{ columna['fieldName']|capitalize }}','required'  => false,'attr'=>['class'=>'','maxlength'=>{{ columna['length'] }}]])
{% endif %}
{% endif %}
{% elseif columna['type'] == 'integer' %}
        ->add('{{ columna['fieldName'] }}',IntegerType::class,['label'=>'{{ columna['fieldName']|capitalize }}','required'  => false])
{% elseif columna['type'] == 'boolean' %}
        ->add('{{ columna['fieldName'] }}',CheckboxType::class,['label'=>'{{ columna['fieldName']|capitalize }}','required'  => false])
{% elseif columna['type'] == 'datetime' %}
        ->add('{{ columna['fieldName'] }}',DateTimeType::class,['label'=>'{{ columna['fieldName']|capitalize }}','required'  => false,'widget' => 'single_text' ,  'html5' => true ,  "attr"=>array()])
{% elseif columna['type'] == 'time' %}
        ->add('{{ columna['fieldName'] }}',TimeType::class,['label'=>'{{ columna['fieldName']|capitalize }}','required'  => false,'widget' => 'single_text' ,  'html5' => true ,  "attr"=>array()])
{% elseif columna['type'] == 'date' %}
        ->add('{{ columna['fieldName'] }}',DateType::class,['label'=>'{{ columna['fieldName']|capitalize }}','required'  => false,'widget' => 'single_text' ,  'html5' => true ,  "attr"=>array("placeholder"=>"YYYY-MM-DD")])
{% else %}
        ->add('{{ columna['fieldName'] }}')
{% endif %}
{% endfor %};

    }

    /**
    * {@inheritdoc}
    */
    public function configureOptions(OptionsResolver $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => '{{ entityNamespace }}'
         ));
    }

    /**
    * {@inheritdoc}
    */
    public function getBlockPrefix()
    {
        return '{{ entityLower }}';
    }

    /**
    * {@inheritdoc}
    */
    public function getName()
    {
        return $this->getBlockPrefix();
    }

}
